var s=o=>{let e=history[o];return function(){let r=e.apply(this,arguments),t=new Event(o);return window.dispatchEvent(t),r}};var i=class{constructor(e){this.options=Object.assign(this.initOptions(),e),this.installLogger()}initOptions(){return window.history.pushState=s("pushState"),window.history.replaceState=s("replaceState"),{historyLogger:!1,hashLogger:!1,domLogger:!1,jsErrorLogger:!1,SDKVersion:"1.0.0",payload:{}}}instanllListerner(e,r,t){e.forEach(n=>{window.addEventListener(n,()=>{console.log("listener called"),this.reportTracker({event:n,targetKey:r,payload:t})})})}sendLogger(e){this.reportTracker(e)}setUserId(e){this.options.id=e}errorListerner(){window.addEventListener("error",e=>{console.log("jserror"),this.reportTracker({event:"js_error",targetKey:"JSerror",message:e.message})}),window.addEventListener("unhandledrejection",e=>{console.log("promiseerror"),e.promise.catch(r=>{this.reportTracker({event:"promise_error",targetKey:"unhandledrejection",message:r})})})}installLogger(){this.options.historyLogger&&this.instanllListerner(["pushState","replaceState","popState"],"historyLogger"),this.options.hashLogger&&this.instanllListerner(["hashchange"],"hashLogger"),this.options.jsErrorLogger&&this.errorListerner()}reportTracker(e){let r=Object.assign(this.options,e,{time:new Date().getTime()}),t=new Blob([JSON.stringify(r)],{type:"application/x-www-form-urlencoded"});navigator.sendBeacon(this.options.requestUrl,t)}},a=i;var L=a;export{L as default};
